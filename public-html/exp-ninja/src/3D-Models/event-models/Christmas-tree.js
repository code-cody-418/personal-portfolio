/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, {useEffect, useRef, useState} from 'react'
import { useGLTF } from '@react-three/drei'
import christmasTree from './christmas-tree.glb'

export default function ChristmasTree({ }) {
  const group = useRef()
  const { nodes, materials } = useGLTF(christmasTree)

    //logic to determine if present shows when event is completed
    // const [visible, setVisible] = useState(false)

    // useEffect(() => {
    //     if (participation === null) {
    //     } else {
    //         if (participation.participationCompleted === 1 && participation.participationCoinReward === 1) {
    //             return setVisible(true)
    //         } else if (participation.participationCompleted === 1) {
    //             return setVisible(false)
    //         } else {
    //             return setVisible(true)
    //         }
    //     }
    // }, [participation])

  return (
    <group ref={group} dispose={null} scale={2} rotation={[0, -1.9, 0]}>
      <mesh geometry={nodes.Cone.geometry} material={nodes.Cone.material} position={[0, 1.01, 0]} />
      <mesh
        geometry={nodes.Sphere001.geometry}
        material={nodes.Sphere001.material}
        position={[1.06, 1.51, 0.47]}
        rotation={[-Math.PI, 1.38, -Math.PI]}
        scale={0.13}
      />
      <mesh
        geometry={nodes.Cylinder.geometry}
        material={nodes.Cylinder.material}
        position={[0, 3, 0]}
        rotation={[-Math.PI / 2, 1.57, 0]}
        scale={0.33}
      />
      <group position={[-0.33, 0.26, -1.58]} rotation={[-0.03, -0.78, -0.03]} scale={[0.27, 0.27, 0.27]}>
        <mesh geometry={nodes.Cube_1.geometry} material={nodes.Cube_1.material} />
        <mesh geometry={nodes.Cube_2.geometry} material={nodes.Cube_2.material} />
      </group>
      <group position={[-0.71, 0.11, -2.07]} rotation={[0, Math.PI / 4, 0]} scale={[0.27, 0.11, 0.27]}>
        <mesh geometry={nodes.Cube001_1.geometry} material={materials['Material.006']} />
        <mesh geometry={nodes.Cube001_2.geometry} material={nodes.Cube001_2.material} />
      </group>
      <group position={[-0.11, 0.28, -2.19]} rotation={[0, Math.PI / 2, 0]} scale={[0.19, 0.3, 0.19]}>
        <mesh geometry={nodes.Cube002_1.geometry} material={nodes.Cube002_1.material} />
        <mesh geometry={nodes.Cube002_2.geometry} material={nodes.Cube002_2.material} />
      </group>
      <group position={[-2.78, 1.32, 0.16]} rotation={[-0.04, 0.89, 0.02]} scale={[0.27, 0.27, 0.27]}>
        <mesh geometry={nodes.Cube003_1.geometry} material={nodes.Cube003_1.material} />
        <mesh geometry={nodes.Cube003_2.geometry} material={nodes.Cube003_2.material} />
      </group>
      <group position={[-3.26, 1.17, -0.36]} rotation={[-Math.PI, 0.68, -Math.PI]} scale={[0.27, 0.11, 0.27]}>
        <mesh geometry={nodes.Cube004_1.geometry} material={nodes.Cube004_1.material} />
        <mesh geometry={nodes.Cube004_2.geometry} material={nodes.Cube004_2.material} />
      </group>
      <group position={[-2.78, 0.79, -0.8]} rotation={[-Math.PI, -0.89, -Math.PI]} scale={[0.19, 0.3, 0.19]}>
        <mesh geometry={nodes.Cube005_1.geometry} material={nodes.Cube005_1.material} />
        <mesh geometry={nodes.Cube005_2.geometry} material={nodes.Cube005_2.material} />
      </group>
      <group position={[-2.45, 0.39, -0.63]} rotation={[-Math.PI, Math.PI / 4, -Math.PI]} scale={0.69}>
        <mesh geometry={nodes.NurbsCurve_1.geometry} material={nodes.NurbsCurve_1.material} />
        <mesh geometry={nodes.NurbsCurve_2.geometry} material={materials['Material.009']} />
      </group>
    </group>
  )
}

useGLTF.preload('/christmas-tree.glb')

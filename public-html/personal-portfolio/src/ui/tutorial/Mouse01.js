/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, {useEffect, useRef, useState} from 'react'
import {useGLTF, useAnimations} from '@react-three/drei'
import mouseGLB from './mouse01.glb'
import {useResponsive3d} from "../../customHooks/useResponsive3d";

export default function Mouse01(props) {
    const group = useRef()
    const {nodes, materials, animations} = useGLTF(mouseGLB)
    const {actions} = useAnimations(animations, group)

//sets mouse movement
    const [action, setAction] = useState("mouseMove")

    // const [action, setAction] = useState("mouseMove")
    const [mouseButtonColor, setMouseButtonColor] = useState("#a0e734")

    useEffect(() => {
        actions[action].reset().fadeIn(0.5).play()
        // setMouseButtonColor("#a0e734")
        return () => actions[action].fadeOut(0.5)
    }, [actions, action]);

    const {mouseVisible} = useResponsive3d()

    return (
        <group ref={group} {...props} dispose={null}>
            <group name="RootNode_(gltf_orientation_matrix)" position={[-1.81, 0, 0]} rotation={[-Math.PI / 2, 0, 0]}>
                <group
                    visible={mouseVisible}
                    position={[-31.11, -30.71, -1.89]}
                    on={() => {
                        setAction("mouseStill")
                        setMouseButtonColor("#a0e734")
                    }}
                    onClick={() => {
                        setAction("mouseMove")
                        setMouseButtonColor("#a0e734")
                    }}
                    // on={() => {
                    //     setAction("mouseStill")
                    //     setMouseButtonColor("3")
                    // }}
                >
                    <mesh geometry={nodes.Mesh_0.geometry} material={materials.Material__2}/>
                    <mesh geometry={nodes.Mesh_0001.geometry}>
                        <meshStandardMaterial attach='material' color={mouseButtonColor}/>
                    </mesh>
                </group>
            </group>
        </group>
    )
}

useGLTF.preload(mouseGLB)

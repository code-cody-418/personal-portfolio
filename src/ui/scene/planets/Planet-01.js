/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export default function Planet01() {
  const fullPlanet = useRef()
  const planet = useRef()
  const clouds = useRef()
  const { nodes, materials } = useGLTF('/planets/planet-01-transformed.glb')

  //animates the position and rotation of the planet and clouds
  useFrame(({ clock }) => {
    planet.current.rotation.z = clock.getElapsedTime() / 8
    clouds.current.rotation.z = clock.getElapsedTime() / 6 //rotate clouds slightly slower than planet

    // Planet in orbit
    fullPlanet.current.position.x = Math.cos(clock.getElapsedTime() / 10) * -150
    fullPlanet.current.position.y = Math.cos(clock.getElapsedTime() / 12) * 30
    fullPlanet.current.position.z = Math.sin(clock.getElapsedTime() / 10) * -50
  })

  return (
    <group ref={fullPlanet} rotation={[-Math.PI / 2, 0.50, 0]} scale={30}>
        <group ref={clouds}>
          <mesh geometry={nodes.Clouds_1_0.geometry} material={materials.Clouds_1} />
        </group>
        <group ref={planet}>
          <mesh geometry={nodes.Clouds_0_0.geometry} material={materials.Clouds_0} />
          <mesh geometry={nodes.Planet_0.geometry} material={materials.PurplePlanet} />
        </group>
      </group>
  )
}

useGLTF.preload('/planets/planet-01-transformed.glb')
